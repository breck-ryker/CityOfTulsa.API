
@model CityOfTulsaUI.Models.UserModel

@{
   ViewData["Title"] = "Search Tulsa Fire Department Dispatch Data";
   List<string> listProblems = (List<string>)ViewBag.Problems;
}

<h5 class="text-muted">@ViewData["Title"]</h5>

@section Styles
{
   <link rel="stylesheet" type="text/css" href="@Url.Content("/lib/bootstrap-datepicker/css/bootstrap-datepicker.min.css")" />
   <link rel="stylesheet" type="text/css" href="@Url.Content("/css/tfddata.css")" />
}

@section Scripts
{
   <script src="@Url.Content("/lib/bootstrap-datepicker/js/bootstrap-datepicker.min.js")"></script>
   <script src="@Url.Content("/js/tfddata.js")"></script>
}

<div class="row mt-4" id="rowDateOptions">

   <div class="col-sm-12 d-flex">

      <div class="form-check float-sm-left align-self-center d-flex mr-3 noselect user-select-none">
         <input class="filteroption-chkbox form-check-input align-self-center mb-1" type="checkbox" value="" id="show_dateoptions" @((Model.UseTFDDateFilter ? "checked" : ""))>
         <label class="filteroption-label form-check-label align-self-center font-weight-bold noselect user-select-none" for="show_dateoptions" id="label_showdateoptions">
            Filter by response date
         </label>
      </div>

      <div id="dateoptions_btngrp" class="btn-group btn-group-toggle float-sm-left align-self-center @(Model.UseTFDDateFilter ? "" : "cot-hidden")" data-toggle="buttons">

         <label class="btn btn-sm btn-outline-secondary @((Model.TFDDateFilterType == DateFilterType.OnDate ? "active" : ""))">
            <input type="radio" name="dateoptions" id="date_on" autocomplete="off" value="@((int)CityOfTulsaUI.Models.DateFilterType.OnDate)" @((Model.TFDDateFilterType == DateFilterType.OnDate ? "checked" : ""))> On
         </label>

         <label class="btn btn-sm btn-outline-secondary @((Model.TFDDateFilterType == DateFilterType.AfterDate ? "active" : ""))">
            <input type="radio" name="dateoptions" id="date_after" autocomplete="off" value="@((int)CityOfTulsaUI.Models.DateFilterType.AfterDate)" @((Model.TFDDateFilterType == DateFilterType.AfterDate ? "checked" : ""))> After
         </label>

         <label class="btn btn-sm btn-outline-secondary @((Model.TFDDateFilterType == DateFilterType.BeforeDate ? "active" : ""))">
            <input type="radio" name="dateoptions" id="date_before" autocomplete="off" value="@((int)CityOfTulsaUI.Models.DateFilterType.BeforeDate)" @((Model.TFDDateFilterType == DateFilterType.BeforeDate ? "checked" : ""))> Before
         </label>

         <label class="btn btn-sm btn-outline-secondary @((Model.TFDDateFilterType == DateFilterType.BetweenDates ? "active" : ""))">
            <input type="radio" name="dateoptions" id="date_between" autocomplete="off" value="@((int)CityOfTulsaUI.Models.DateFilterType.BetweenDates)" @((Model.TFDDateFilterType == DateFilterType.BetweenDates ? "checked" : ""))> Between
         </label>
      </div>
   </div>
</div>
<div class="row d-flex mt-4 flex-nowrap @((Model.UseTFDDateFilter ? "" : "cot-hidden"))" id="rowDates">

   <div class="col-12 d-flex">
      <div class="float-sm-left align-self-center ml-2" id="mindate_container">
         <div class="input-group date">
            <input type="text" class="filter-date btn-sm form-control datepicker bg1 border1 text-center" autocomplete="off" placeholder="@((Model.TFDDateFilterType == DateFilterType.BetweenDates ? "min date" : "select date"))" id="mindate" value="@((Model.MinDate == DateTime.MinValue || Model.MinDate == DateTime.MaxValue ? "" : Model.MinDate.ToString("MM/dd/yyyy")))">
         </div>
      </div>
      <div class="float-sm-left align-self-center ml-2 text-center @((Model.UseTFDDateFilter && Model.TFDDateFilterType == DateFilterType.BetweenDates ? "" : "cot-hidden"))" id="maxdate_label">
         <span class="label">- and -</span>
      </div>
      <div class="float-sm-left align-self-center ml-2 @((Model.UseTFDDateFilter && Model.TFDDateFilterType == DateFilterType.BetweenDates ? "" : "cot-hidden"))" id="maxdate_container">
         <div class="input-group date">
            <input type="text" class="filter-date btn-sm form-control datepicker bg1 border1 text-center" autocomplete="off" placeholder="max date" id="maxdate" value="@((Model.MaxDate == DateTime.MinValue || Model.MaxDate == DateTime.MaxValue ? "" : Model.MaxDate.ToString("MM/dd/yyyy")))">
         </div>
      </div>
   </div>
</div>
<div class="row cot-validator cot-hidden">
   <div class="col-12 text-danger font-weight-bold cot-validator-msg pl-4 pt-4"></div>
</div>
<div class="row mt-4" id="rowProblemOptions">

   <div class="col-sm-12 d-flex">

      <div class="form-check float-sm-left align-self-center d-flex mr-3 noselect user-select-none">
         <input class="filteroption-chkbox form-check-input align-self-center mb-1" type="checkbox" value="" id="show_problemlist" @((Model.UseTFDProblemFilter ? "checked" : ""))>
         <label class="filteroption-label form-check-label align-self-center font-weight-bold noselect user-select-none" for="show_problemlist" id="label_showproblemlist">
            Filter by problem type
         </label>
      </div>

      <div id="problemoptions_btngrp" class="btn-group float-sm-left align-self-center ml-5 @(Model.UseTFDProblemFilter ? "" : "cot-hidden")">

         <button class="btn btn-sm btn-outline-secondary" data-action="select-all">Select All</button>
         <button class="btn btn-sm btn-outline-secondary" data-action="unselect-all">Unselect All</button>
      </div>
   </div>
</div>
<div class="row mt-4 @((Model.UseTFDProblemFilter ? "" : "cot-hidden"))" id="rowProblemList">

   <div class="col-sm-12 d-flex">

      <ul class="pl-0">
         @if (listProblems != null) {
            int i = 0;
            foreach (string problem in listProblems) {

               <li class="list-group-item float-left">
                  <div class="custom-control custom-checkbox">
                     <input class="problem-chkbox custom-control-input problem-item" id="problem_@i" type="checkbox" @((Model.TFDProblems.Contains(problem) ? "checked" : ""))>
                     <label class="problem-label cursor-pointer d-block custom-control-label user-select-none noselect" for="problem_@i">@problem</label>
                  </div>
               </li>

               i++;
            }
         }
      </ul>
   </div>
</div>